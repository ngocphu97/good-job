{"version":3,"sources":["webpack:///./node_modules/@ngrx/entity/fesm5/entity.js","webpack:///./node_modules/rxjs-compat/_esm5/observable/of.js","webpack:///./src/app/modules/posts/components/index.ts","webpack:///./src/app/modules/posts/components/post-form/post-form.component.html","webpack:///./src/app/modules/posts/components/post-form/post-form.component.scss","webpack:///./src/app/modules/posts/components/post-form/post-form.component.ts","webpack:///./src/app/modules/posts/components/post-table/post-table.component.css","webpack:///./src/app/modules/posts/components/post-table/post-table.component.html","webpack:///./src/app/modules/posts/components/post-table/post-table.component.ts","webpack:///./src/app/modules/posts/components/post/post.component.css","webpack:///./src/app/modules/posts/components/post/post.component.html","webpack:///./src/app/modules/posts/components/post/post.component.ts","webpack:///./src/app/modules/posts/components/schedule-calendar/schedule-calendar.component.html","webpack:///./src/app/modules/posts/components/schedule-calendar/schedule-calendar.component.scss","webpack:///./src/app/modules/posts/components/schedule-calendar/schedule-calendar.component.ts","webpack:///./src/app/modules/posts/containers/create-post-page/create-post-page.component.html","webpack:///./src/app/modules/posts/containers/create-post-page/create-post-page.component.scss","webpack:///./src/app/modules/posts/containers/create-post-page/create-post-page.component.ts","webpack:///./src/app/modules/posts/containers/index.ts","webpack:///./src/app/modules/posts/containers/post-detail-page/post-detail-page.component.css","webpack:///./src/app/modules/posts/containers/post-detail-page/post-detail-page.component.html","webpack:///./src/app/modules/posts/containers/post-detail-page/post-detail-page.component.ts","webpack:///./src/app/modules/posts/containers/posts-page/posts-page.component.html","webpack:///./src/app/modules/posts/containers/posts-page/posts-page.component.scss","webpack:///./src/app/modules/posts/containers/posts-page/posts-page.component.ts","webpack:///./src/app/modules/posts/containers/schedule-page/schedule-page.component.html","webpack:///./src/app/modules/posts/containers/schedule-page/schedule-page.component.scss","webpack:///./src/app/modules/posts/containers/schedule-page/schedule-page.component.ts","webpack:///./src/app/modules/posts/posts.module.ts","webpack:///./src/app/modules/posts/posts.routing.ts","webpack:///./src/app/modules/posts/services/index.ts","webpack:///./src/app/modules/posts/services/post.service.ts","webpack:///./src/app/modules/posts/store/actions/index.ts","webpack:///./src/app/modules/posts/store/actions/post.action.ts","webpack:///./src/app/modules/posts/store/effects/index.ts","webpack:///./src/app/modules/posts/store/effects/post.effect.ts","webpack:///./src/app/modules/posts/store/index.ts","webpack:///./src/app/modules/posts/store/reducers/index.ts","webpack:///./src/app/modules/posts/store/reducers/post.reducer.ts","webpack:///./src/app/modules/posts/store/selectors/index.ts","webpack:///./src/app/modules/posts/store/selectors/post.selector.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA;AAAA;AACA;AACA;AACA;AACA;AACyB;;AAEzB;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA,yCAAyC,sBAAsB;AAC/D;AACA;AACA,YAAY;AACZ;;AAEA;AACA;AACA,0CAA0C,kBAAkB;AAC5D,+CAA+C,uBAAuB;AACtE;AACA,0CAA0C,qBAAqB,EAAE;AACjE,SAAS;AACT,wHAAoE,mBAAmB,EAAE;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;;AAEA;AACA,4CAA4C,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,MAAM,gBAAgB;AACzC;AACA;AACA;AACA;AACA,iBAAiB,sBAAsB;AACvC;AACA;AACA;AACA;AACA,4BAA4B,sBAAsB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,8BAA8B;AAC/B;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,gCAAgC,UAAU,uCAAuC;AACjF;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF,oBAAoB;AAC7G;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,8BAA8B,EAAE;AACpE,iCAAiC,mCAAmC,EAAE;AACtE;AACA,wDAAwD,6BAA6B,EAAE;AACvF;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA,wBAAwB;AACxB,SAAS;AACT;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD,oCAAoC,EAAE;AAC1F;AACA;AACA,iEAAiE,2CAA2C,EAAE;AAC9G;AACA,yDAAyD,0BAA0B,EAAE;AACrF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yFAAyF,oBAAoB;AAC7G;AACA;AACA;AACA,kCAAkC,0BAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wDAAwD,6CAA6C,EAAE;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,gDAAgD,EAAE;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,qDAAqD,0CAA0C,EAAE;AACjG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,oBAAoB;AAC3G;AACA;AACA;AACA,kCAAkC,0BAA0B;AAC5D;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,qBAAqB,0BAA0B;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAC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","file":"app-modules-posts-posts-module.js","sourcesContent":["/**\n * @license NgRx 6.0.1\n * (c) 2015-2018 Brandon Roberts, Mike Ryan, Rob Wormald, Victor Savkin\n * License: MIT\n */\nimport { createSelector } from '@ngrx/store';\n\nfunction getInitialEntityState() {\n    return {\n        ids: [],\n        entities: {},\n    };\n}\nfunction createInitialStateFactory() {\n    function getInitialState(additionalState) {\n        if (additionalState === void 0) { additionalState = {}; }\n        return Object.assign(getInitialEntityState(), additionalState);\n    }\n    return { getInitialState: getInitialState };\n}\n\nfunction createSelectorsFactory() {\n    function getSelectors(selectState) {\n        var selectIds = function (state) { return state.ids; };\n        var selectEntities = function (state) { return state.entities; };\n        var selectAll = createSelector(selectIds, selectEntities, function (ids, entities) {\n            return ids.map(function (id) { return entities[id]; });\n        });\n        var selectTotal = createSelector(selectIds, function (ids) { return ids.length; });\n        if (!selectState) {\n            return {\n                selectIds: selectIds,\n                selectEntities: selectEntities,\n                selectAll: selectAll,\n                selectTotal: selectTotal,\n            };\n        }\n        return {\n            selectIds: createSelector(selectState, selectIds),\n            selectEntities: createSelector(selectState, selectEntities),\n            selectAll: createSelector(selectState, selectAll),\n            selectTotal: createSelector(selectState, selectTotal),\n        };\n    }\n    return { getSelectors: getSelectors };\n}\n\nvar __assign$1 = (undefined && undefined.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nvar __read = (undefined && undefined.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nvar __spread = (undefined && undefined.__spread) || function () {\n    for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n    return ar;\n};\nvar DidMutate;\n(function (DidMutate) {\n    DidMutate[DidMutate[\"EntitiesOnly\"] = 0] = \"EntitiesOnly\";\n    DidMutate[DidMutate[\"Both\"] = 1] = \"Both\";\n    DidMutate[DidMutate[\"None\"] = 2] = \"None\";\n})(DidMutate || (DidMutate = {}));\nfunction createStateOperator(mutator) {\n    return function operation(arg, state) {\n        var clonedEntityState = {\n            ids: __spread(state.ids),\n            entities: __assign$1({}, state.entities),\n        };\n        var didMutate = mutator(arg, clonedEntityState);\n        if (didMutate === DidMutate.Both) {\n            return Object.assign({}, state, clonedEntityState);\n        }\n        if (didMutate === DidMutate.EntitiesOnly) {\n            return __assign$1({}, state, { entities: clonedEntityState.entities });\n        }\n        return state;\n    };\n}\n\nvar __values$1 = (undefined && undefined.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nfunction createUnsortedStateAdapter(selectId) {\n    function addOneMutably(entity, state) {\n        var key = selectId(entity);\n        if (key in state.entities) {\n            return DidMutate.None;\n        }\n        state.ids.push(key);\n        state.entities[key] = entity;\n        return DidMutate.Both;\n    }\n    function addManyMutably(entities, state) {\n        var didMutate = false;\n        try {\n            for (var entities_1 = __values$1(entities), entities_1_1 = entities_1.next(); !entities_1_1.done; entities_1_1 = entities_1.next()) {\n                var entity = entities_1_1.value;\n                didMutate = addOneMutably(entity, state) !== DidMutate.None || didMutate;\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (entities_1_1 && !entities_1_1.done && (_a = entities_1.return)) _a.call(entities_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n        var e_1, _a;\n    }\n    function addAllMutably(entities, state) {\n        state.ids = [];\n        state.entities = {};\n        addManyMutably(entities, state);\n        return DidMutate.Both;\n    }\n    function removeOneMutably(key, state) {\n        return removeManyMutably([key], state);\n    }\n    function removeManyMutably(keys, state) {\n        var didMutate = keys\n            .filter(function (key) { return key in state.entities; })\n            .map(function (key) { return delete state.entities[key]; }).length > 0;\n        if (didMutate) {\n            state.ids = state.ids.filter(function (id) { return id in state.entities; });\n        }\n        return didMutate ? DidMutate.Both : DidMutate.None;\n    }\n    function removeAll(state) {\n        return Object.assign({}, state, {\n            ids: [],\n            entities: {},\n        });\n    }\n    function takeNewKey(keys, update, state) {\n        var original = state.entities[update.id];\n        var updated = Object.assign({}, original, update.changes);\n        var newKey = selectId(updated);\n        var hasNewKey = newKey !== update.id;\n        if (hasNewKey) {\n            keys[update.id] = newKey;\n            delete state.entities[update.id];\n        }\n        state.entities[newKey] = updated;\n        return hasNewKey;\n    }\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    function updateManyMutably(updates, state) {\n        var newKeys = {};\n        updates = updates.filter(function (update) { return update.id in state.entities; });\n        var didMutateEntities = updates.length > 0;\n        if (didMutateEntities) {\n            var didMutateIds = updates.filter(function (update) { return takeNewKey(newKeys, update, state); }).length > 0;\n            if (didMutateIds) {\n                state.ids = state.ids.map(function (id) { return newKeys[id] || id; });\n                return DidMutate.Both;\n            }\n            else {\n                return DidMutate.EntitiesOnly;\n            }\n        }\n        return DidMutate.None;\n    }\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    function upsertManyMutably(entities, state) {\n        var added = [];\n        var updated = [];\n        try {\n            for (var entities_2 = __values$1(entities), entities_2_1 = entities_2.next(); !entities_2_1.done; entities_2_1 = entities_2.next()) {\n                var entity = entities_2_1.value;\n                var id = selectId(entity);\n                if (id in state.entities) {\n                    updated.push({ id: id, changes: entity });\n                }\n                else {\n                    added.push(entity);\n                }\n            }\n        }\n        catch (e_2_1) { e_2 = { error: e_2_1 }; }\n        finally {\n            try {\n                if (entities_2_1 && !entities_2_1.done && (_a = entities_2.return)) _a.call(entities_2);\n            }\n            finally { if (e_2) throw e_2.error; }\n        }\n        var didMutateByUpdated = updateManyMutably(updated, state);\n        var didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n        var e_2, _a;\n    }\n    return {\n        removeAll: removeAll,\n        addOne: createStateOperator(addOneMutably),\n        addMany: createStateOperator(addManyMutably),\n        addAll: createStateOperator(addAllMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n        removeOne: createStateOperator(removeOneMutably),\n        removeMany: createStateOperator(removeManyMutably),\n    };\n}\n\nvar __values = (undefined && undefined.__values) || function (o) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\n    if (m) return m.call(o);\n    return {\n        next: function () {\n            if (o && i >= o.length) o = void 0;\n            return { value: o && o[i++], done: !o };\n        }\n    };\n};\nfunction createSortedStateAdapter(selectId, sort) {\n    var _a = createUnsortedStateAdapter(selectId), removeOne = _a.removeOne, removeMany = _a.removeMany, removeAll = _a.removeAll;\n    function addOneMutably(entity, state) {\n        return addManyMutably([entity], state);\n    }\n    function addManyMutably(newModels, state) {\n        var models = newModels.filter(function (model) { return !(selectId(model) in state.entities); });\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            merge(models, state);\n            return DidMutate.Both;\n        }\n    }\n    function addAllMutably(models, state) {\n        state.entities = {};\n        state.ids = [];\n        addManyMutably(models, state);\n        return DidMutate.Both;\n    }\n    function updateOneMutably(update, state) {\n        return updateManyMutably([update], state);\n    }\n    function takeUpdatedModel(models, update, state) {\n        if (!(update.id in state.entities)) {\n            return false;\n        }\n        var original = state.entities[update.id];\n        var updated = Object.assign({}, original, update.changes);\n        var newKey = selectId(updated);\n        delete state.entities[update.id];\n        models.push(updated);\n        return newKey !== update.id;\n    }\n    function updateManyMutably(updates, state) {\n        var models = [];\n        var didMutateIds = updates.filter(function (update) { return takeUpdatedModel(models, update, state); }).length >\n            0;\n        if (models.length === 0) {\n            return DidMutate.None;\n        }\n        else {\n            var originalIds_1 = state.ids;\n            var updatedIndexes_1 = [];\n            state.ids = state.ids.filter(function (id, index) {\n                if (id in state.entities) {\n                    return true;\n                }\n                else {\n                    updatedIndexes_1.push(index);\n                    return false;\n                }\n            });\n            merge(models, state);\n            if (!didMutateIds &&\n                updatedIndexes_1.every(function (i) { return state.ids[i] === originalIds_1[i]; })) {\n                return DidMutate.EntitiesOnly;\n            }\n            else {\n                return DidMutate.Both;\n            }\n        }\n    }\n    function upsertOneMutably(entity, state) {\n        return upsertManyMutably([entity], state);\n    }\n    function upsertManyMutably(entities, state) {\n        var added = [];\n        var updated = [];\n        try {\n            for (var entities_1 = __values(entities), entities_1_1 = entities_1.next(); !entities_1_1.done; entities_1_1 = entities_1.next()) {\n                var entity = entities_1_1.value;\n                var id = selectId(entity);\n                if (id in state.entities) {\n                    updated.push({ id: id, changes: entity });\n                }\n                else {\n                    added.push(entity);\n                }\n            }\n        }\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\n        finally {\n            try {\n                if (entities_1_1 && !entities_1_1.done && (_a = entities_1.return)) _a.call(entities_1);\n            }\n            finally { if (e_1) throw e_1.error; }\n        }\n        var didMutateByUpdated = updateManyMutably(updated, state);\n        var didMutateByAdded = addManyMutably(added, state);\n        switch (true) {\n            case didMutateByAdded === DidMutate.None &&\n                didMutateByUpdated === DidMutate.None:\n                return DidMutate.None;\n            case didMutateByAdded === DidMutate.Both ||\n                didMutateByUpdated === DidMutate.Both:\n                return DidMutate.Both;\n            default:\n                return DidMutate.EntitiesOnly;\n        }\n        var e_1, _a;\n    }\n    function merge(models, state) {\n        models.sort(sort);\n        var ids = [];\n        var i = 0;\n        var j = 0;\n        while (i < models.length && j < state.ids.length) {\n            var model = models[i];\n            var modelId = selectId(model);\n            var entityId = state.ids[j];\n            var entity = state.entities[entityId];\n            if (sort(model, entity) <= 0) {\n                ids.push(modelId);\n                i++;\n            }\n            else {\n                ids.push(entityId);\n                j++;\n            }\n        }\n        if (i < models.length) {\n            state.ids = ids.concat(models.slice(i).map(selectId));\n        }\n        else {\n            state.ids = ids.concat(state.ids.slice(j));\n        }\n        models.forEach(function (model, i) {\n            state.entities[selectId(model)] = model;\n        });\n    }\n    return {\n        removeOne: removeOne,\n        removeMany: removeMany,\n        removeAll: removeAll,\n        addOne: createStateOperator(addOneMutably),\n        updateOne: createStateOperator(updateOneMutably),\n        upsertOne: createStateOperator(upsertOneMutably),\n        addAll: createStateOperator(addAllMutably),\n        addMany: createStateOperator(addManyMutably),\n        updateMany: createStateOperator(updateManyMutably),\n        upsertMany: createStateOperator(upsertManyMutably),\n    };\n}\n\nvar __assign = (undefined && undefined.__assign) || Object.assign || function(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n            t[p] = s[p];\n    }\n    return t;\n};\nfunction createEntityAdapter(options) {\n    if (options === void 0) { options = {}; }\n    var _a = __assign({ sortComparer: false, selectId: function (instance) { return instance.id; } }, options), selectId = _a.selectId, sortComparer = _a.sortComparer;\n    var stateFactory = createInitialStateFactory();\n    var selectorsFactory = createSelectorsFactory();\n    var stateAdapter = sortComparer\n        ? createSortedStateAdapter(selectId, sortComparer)\n        : createUnsortedStateAdapter(selectId);\n    return __assign({ selectId: selectId,\n        sortComparer: sortComparer }, stateFactory, selectorsFactory, stateAdapter);\n}\n\n/**\n * DO NOT EDIT\n *\n * This file is automatically generated at build\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { createEntityAdapter };\n//# sourceMappingURL=entity.js.map\n","export { of } from 'rxjs';\n//# sourceMappingURL=of.js.map","import { PostTableComponent } from './post-table/post-table.component';\r\nimport { PostFormComponent } from './post-form/post-form.component';\r\nimport { PostComponent } from './post/post.component';\r\nimport { ScheduleCalendarComponent } from './schedule-calendar/schedule-calendar.component';\r\n\r\nexport const components: Array<any> = [\r\n  PostComponent,\r\n  PostFormComponent,\r\n  PostTableComponent,\r\n  ScheduleCalendarComponent\r\n];\r\n","module.exports = \"<div class=\\\"example-container\\\">\\n  <form #f=\\\"ngForm\\\" novalidate (ngSubmit)=\\\"onSubmit()\\\">\\n    <mat-form-field>\\n      <input matInput placeholder=\\\"Input\\\" name=\\\"title\\\" required [(ngModel)]=\\\"post.title\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field>\\n      <textarea matInput placeholder=\\\"Textarea\\\" name=\\\"body\\\" [(ngModel)]=\\\"post.body\\\"></textarea>\\n    </mat-form-field>\\n\\n    <button mat-button type=\\\"submit\\\" [disabled]=\\\"f.invalid\\\">Save</button>\\n  </form>\\n</div>\\n\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column; }\\n\\n.example-container > * {\\n  width: 100%; }\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Post } from '../../models';\n\n@Component({\n  selector: 'app-post-form',\n  templateUrl: './post-form.component.html',\n  styleUrls: ['./post-form.component.scss']\n})\nexport class PostFormComponent implements OnInit {\n  @Input() post: Post;\n  @Output() save = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    if (!this.post) {\n      this.post = {title: ''};\n    }\n  }\n\n  onSubmit() {\n    this.save.emit({...this.post});\n  }\n}\n","module.exports = \".example-container {\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  min-width: 300px;\\r\\n  max-height: 500px;\\r\\n  overflow: auto;\\r\\n}\\r\\n\\r\\n.mat-table .mat-row:hover{\\r\\n  cursor: pointer;\\r\\n}\\r\\n\"","module.exports = \"<div class=\\\"example-container mat-elevation-z8\\\">\\n  <table mat-table #table [dataSource]=\\\"dataSource\\\">\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef> ID</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.id}}</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"title\\\">\\n      <th mat-header-cell *matHeaderCellDef> Title</th>\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}}</td>\\n    </ng-container>\\n\\n    <ng-container matColumnDef=\\\"actions\\\">\\n      <th mat-header-cell *matHeaderCellDef></th>\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\n        <button mat-button (click)=\\\"onDeleteClicked(element); $event.stopPropagation();\\\">\\n          Delete\\n        </button>\\n      </td>\\n    </ng-container>\\n\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\n        (click)=\\\"onRowClicked(row)\\\"></tr>\\n  </table>\\n</div>\\n\\n\"","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { Post } from '../../models';\n\n@Component({\n  selector: 'app-post-table',\n  templateUrl: './post-table.component.html',\n  styleUrls: ['./post-table.component.css']\n})\nexport class PostTableComponent implements OnInit {\n  @Input() posts: Array<Post>;\n  @Output() rowSelected = new EventEmitter();\n\n  displayedColumns = ['id', 'title', 'actions'];\n  dataSource: MatTableDataSource<Post>;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n    this.dataSource = new MatTableDataSource<Post>(this.posts);\n  }\n\n  onDeleteClicked(post) {\n\n  }\n\n  onRowClicked(row) {\n    this.rowSelected.emit(row);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div>Id: {{post.id}}</div>\\n<div>Title: {{post.title}}</div>\\n<div>Detail: {{post.body}}</div>\\n\"","import { Component, Input, OnInit } from '@angular/core';\nimport { Post } from '../../models';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.css']\n})\nexport class PostComponent implements OnInit {\n  @Input() post: Post;\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<p>\\n  schedule-calendar works!\\n</p>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-schedule-calendar',\n  templateUrl: './schedule-calendar.component.html',\n  styleUrls: ['./schedule-calendar.component.scss']\n})\nexport class ScheduleCalendarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<app-post-form (save)=\\\"onSave($event)\\\"></app-post-form>\\r\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Post } from '../../models';\nimport * as fromStore from '../../store';\nimport { Store } from '@ngrx/store';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-create-post-page',\n  templateUrl: './create-post-page.component.html',\n  styleUrls: ['./create-post-page.component.scss']\n})\nexport class CreatePostPageComponent implements OnInit {\n\n  constructor(private router: Router,\n              private store: Store<fromStore.PostState>) {\n  }\n\n\n  ngOnInit() {\n  }\n\n  onSave(post: Post): void {\n    this.store.dispatch(new fromStore.CreatePost({post: post}));\n  }\n\n}\n","import { PostsPageComponent } from './posts-page/posts-page.component';\r\nimport { PostDetailPageComponent } from './post-detail-page/post-detail-page.component';\r\nimport { CreatePostPageComponent } from './create-post-page/create-post-page.component';\r\nimport { SchedulePageComponent } from './schedule-page/schedule-page.component';\r\n\r\nexport {\r\n  PostsPageComponent,\r\n  PostDetailPageComponent,\r\n  CreatePostPageComponent,\r\n  SchedulePageComponent\r\n};\r\n\r\nexport const containers: Array<any> = [\r\n  PostsPageComponent,\r\n  PostDetailPageComponent,\r\n  CreatePostPageComponent,\r\n  SchedulePageComponent\r\n];\r\n","module.exports = \"\"","module.exports = \"<app-post [post]=\\\"post$ | async\\\"></app-post>\\r\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport * as fromStore from '../../store';\nimport { Post } from '../../models';\n\n@Component({\n  selector: 'app-post-detail-page',\n  templateUrl: './post-detail-page.component.html',\n  styleUrls: ['./post-detail-page.component.css']\n})\nexport class PostDetailPageComponent implements OnInit {\n  post$: Observable<Post>;\n  loading$: Observable<boolean>;\n\n  constructor(private router: Router,\n              private store: Store<fromStore.PostState>) {\n    this.post$ = this.store.select(fromStore.selectPostDetail);\n    this.loading$ = this.store.select(fromStore.selectPostLoading);\n\n    this.store.dispatch(new fromStore.GetPosts());\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<mat-progress-bar *ngIf=\\\"loading$ | async\\\" mode=\\\"indeterminate\\\"></mat-progress-bar>\\n\\n<button mat-button routerLink=\\\"create\\\">Create new Post</button>\\n\\n<ng-container *ngIf=\\\"(posts$ | async).length > 0; else emptyInHere\\\">\\n  <app-post-table [posts]=\\\"(posts$ | async)\\\"  (rowSelected)=\\\"onRowSelected($event)\\\"></app-post-table>\\n</ng-container>\\n\\n<ng-template #emptyInHere>\\n  <mat-spinner *ngIf=\\\"(loading$ | async)\\\" color=\\\"primary\\\" [diameter]=\\\"50\\\"></mat-spinner>\\n  <app-lonely-in-here *ngIf=\\\"!(loading$ | async)\\\"\\n                      subTitle=\\\"You don't have any posts yet.\\\"\\n                      message=\\\"To get started click the button below to create your first post.\\\">\\n  </app-lonely-in-here>\\n</ng-template>\\n\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport * as fromStore from '../../store';\nimport { Post } from '../../models';\n\n@Component({\n  selector: 'app-posts-page',\n  templateUrl: './posts-page.component.html',\n  styleUrls: ['./posts-page.component.scss']\n})\nexport class PostsPageComponent implements OnInit {\n  posts$: Observable<Array<Post>>;\n  loading$: Observable<boolean>;\n\n  constructor(private router: Router,\n              private store: Store<fromStore.PostState>) {\n    this.posts$ = this.store.select(fromStore.selectAllPosts);\n    this.loading$ = this.store.select(fromStore.selectPostLoading);\n\n    this.store.dispatch(new fromStore.GetPosts());\n  }\n\n  ngOnInit() {\n  }\n\n  onRowSelected(post) {\n    this.router.navigate(['posts/', post.id]);\n  }\n\n}\n","module.exports = \"<p>\\n  schedule-page works!\\n</p>\\n\\n<app-schedule-calendar></app-schedule-calendar>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-schedule-page',\n  templateUrl: './schedule-page.component.html',\n  styleUrls: ['./schedule-page.component.scss']\n})\nexport class SchedulePageComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\n\nimport { SharedModule } from '@app/shared/shared.module';\nimport { FormsModule } from '@angular/forms';\n\nimport * as fromStore from './store';\nimport { services } from './services';\nimport { components } from './components';\nimport { containers } from './containers';\nimport { routes } from './posts.routing';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n\n    StoreModule.forFeature(fromStore.featureName, fromStore.reducers),\n    EffectsModule.forFeature([...fromStore.effects]),\n\n    FormsModule,\n    SharedModule\n  ],\n  declarations: [\n    ...containers,\n    ...components\n  ],\n  providers: [\n    ...services\n  ]\n})\nexport class PostsModule {\n}\n","import { Routes } from '@angular/router';\nimport {\n  PostsPageComponent,\n  PostDetailPageComponent,\n  CreatePostPageComponent,\n  SchedulePageComponent\n} from './containers';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    component: PostsPageComponent\n  },\n  {\n    path: 'create',\n    component: CreatePostPageComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: 'calendar',\n    component: SchedulePageComponent,\n    pathMatch: 'full'\n  },\n  {\n    path: ':id',\n    component: PostDetailPageComponent\n  }\n];\n\n","import { PostService } from './post.service';\r\n\r\nexport {\r\n  PostService\r\n};\r\n\r\nexport const services: Array<any> = [\r\n  PostService\r\n];\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '@app/environment';\nimport { Post } from '../models';\n\n@Injectable()\nexport class PostService {\n\n  constructor(private http: HttpClient) {\n  }\n\n  getAll(): Observable<Array<Post>> {\n    return this.http.get<Array<Post>>(`${environment.rootApiUrl}/posts`);\n  }\n\n  getById(id: number): Observable<Post> {\n    return this.http.get<Post>(`${environment.rootApiUrl}/posts/${id}`);\n  }\n\n  create(post: Post): Observable<any> {\n    return this.http.post(`${environment.rootApiUrl}/posts`, post);\n  }\n\n  update(post: Post): Observable<any> {\n    return this.http.put(`${environment.rootApiUrl}/posts/${post.id}`, post);\n  }\n\n  delete(id: number): Observable<any> {\n    return this.http.delete(`${environment.rootApiUrl}/posts/${id}`);\n  }\n\n}\n","export * from './post.action';\r\n","import { Action } from '@ngrx/store';\r\nimport { Post } from '../../models';\r\n\r\nexport const GET_POSTS = '[POSTS] Get Posts';\r\nexport const GET_POSTS_SUCCESS = '[POSTS] Get Posts Success';\r\nexport const GET_POSTS_FAILURE = '[POSTS] Get Posts Failure';\r\n\r\nexport const GET_POST_BY_ID = '[POSTS] Get Post By Id';\r\nexport const GET_POST_BY_ID_SUCCESS = '[POSTS] Get Post By Id Success';\r\nexport const GET_POST_BY_ID_FAILURE = '[POSTS] Get Post By Id Failure';\r\n\r\nexport const CREATE_POST = '[POSTS] Create Post';\r\nexport const CREATE_POST_SUCCESS = '[POSTS] Create Post Success';\r\nexport const CREATE_POST_FAILURE = '[POSTS] Create Post Failure';\r\n\r\nexport const UPDATE_POST = '[POSTS] Update Post';\r\nexport const UPDATE_POST_SUCCESS = '[POSTS] Update Post Success';\r\nexport const UPDATE_POST_FAILURE = '[POSTS] Update Post Failure';\r\n\r\nexport const DELETE_POST = '[POSTS] Delete Post';\r\nexport const DELETE_POST_SUCCESS = '[POSTS] Delete Post Success';\r\nexport const DELETE_POST_FAILURE = '[POSTS] Delete Post Failure';\r\n\r\nexport class GetPosts implements Action {\r\n  readonly type = GET_POSTS;\r\n\r\n  constructor(public payload?: any) {\r\n  }\r\n}\r\n\r\nexport class GetPostsSuccess implements Action {\r\n  readonly type = GET_POSTS_SUCCESS;\r\n\r\n  constructor(public payload: { posts: Array<Post> }) {\r\n  }\r\n}\r\n\r\nexport class GetPostsFailure implements Action {\r\n  readonly type = GET_POSTS_FAILURE;\r\n\r\n  constructor(public payload?: { error: any }) {\r\n  }\r\n}\r\n\r\nexport class GetPostById implements Action {\r\n  readonly type = GET_POST_BY_ID;\r\n\r\n  constructor(public payload: { id: number }) {\r\n  }\r\n}\r\n\r\nexport class GetPostByIdSuccess implements Action {\r\n  readonly type = GET_POST_BY_ID_SUCCESS;\r\n\r\n  constructor(public payload: { post: Post }) {\r\n  }\r\n}\r\n\r\nexport class GetPostByIdFailure implements Action {\r\n  readonly type = GET_POST_BY_ID_FAILURE;\r\n\r\n  constructor(public payload?: { error: any }) {\r\n  }\r\n}\r\n\r\nexport class CreatePost implements Action {\r\n  readonly type = CREATE_POST;\r\n\r\n  constructor(public payload: { post: Post }) {\r\n  }\r\n}\r\n\r\nexport class CreatePostSuccess implements Action {\r\n  readonly type = CREATE_POST_SUCCESS;\r\n\r\n  constructor(public payload: { post: Post }) {\r\n  }\r\n}\r\n\r\nexport class CreatePostFailure implements Action {\r\n  readonly type = CREATE_POST_FAILURE;\r\n\r\n  constructor(public payload?: { error: any }) {\r\n  }\r\n}\r\n\r\nexport class UpdatePost implements Action {\r\n  readonly type = UPDATE_POST;\r\n\r\n  constructor(public payload: { post: Post }) {\r\n  }\r\n}\r\n\r\nexport class UpdatePostSuccess implements Action {\r\n  readonly type = UPDATE_POST_SUCCESS;\r\n\r\n  constructor(public payload: { post: Post }) {\r\n  }\r\n}\r\n\r\nexport class UpdatePostFailure implements Action {\r\n  readonly type = UPDATE_POST_FAILURE;\r\n\r\n  constructor(public payload?: { error: any }) {\r\n  }\r\n}\r\n\r\nexport class DeletePost implements Action {\r\n  readonly type = DELETE_POST;\r\n\r\n  constructor(public payload: { id: number }) {\r\n  }\r\n}\r\n\r\nexport class DeletePostSuccess implements Action {\r\n  readonly type = DELETE_POST_SUCCESS;\r\n\r\n  constructor(public payload?: any) {\r\n  }\r\n}\r\n\r\nexport class DeletePostFailure implements Action {\r\n  readonly type = DELETE_POST_FAILURE;\r\n\r\n  constructor(public payload?: { error: any }) {\r\n  }\r\n}\r\n\r\nexport type PostActions =\r\n  | GetPosts | GetPostsSuccess | GetPostsFailure\r\n  | GetPostById | GetPostByIdSuccess | GetPostByIdFailure\r\n  | CreatePost | CreatePostSuccess | CreatePostFailure\r\n  | UpdatePost | UpdatePostSuccess | UpdatePostFailure\r\n  | DeletePost | DeletePostSuccess | DeletePostFailure;\r\n","import { PostEffects } from './post.effect';\r\n\r\nexport const effects = [\r\n  PostEffects\r\n];\r\n","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect } from '@ngrx/effects';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { map, switchMap, catchError } from 'rxjs/operators';\r\n\r\nimport { Post } from '../../models';\r\nimport { PostService } from '../../services';\r\nimport * as fromActions from '../actions/post.action';\r\n\r\n@Injectable()\r\nexport class PostEffects {\r\n\r\n  constructor(private actions$: Actions,\r\n              private postService: PostService) {\r\n  }\r\n\r\n  @Effect()\r\n  getPosts = this.actions$.ofType(fromActions.GET_POSTS).pipe(\r\n    map((action: fromActions.GetPosts) => action),\r\n    switchMap(() => {\r\n      return this.postService\r\n        .getAll()\r\n        .pipe(\r\n          map((response: Array<Post>) => new fromActions.GetPostsSuccess({posts: response})),\r\n          catchError((error) => of(new fromActions.GetPostsFailure({error: error})))\r\n        );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  getPostById$ = this.actions$.ofType(fromActions.GET_POST_BY_ID).pipe(\r\n    map((action: fromActions.GetPostById) => action.payload),\r\n    switchMap((payload) => {\r\n      return this.postService\r\n        .getById(payload.id)\r\n        .pipe(\r\n          map(post => new fromActions.GetPostByIdSuccess({post: post})),\r\n          catchError((error) => of(new fromActions.GetPostByIdFailure({error: error})))\r\n        );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  createPost$ = this.actions$.ofType(fromActions.CREATE_POST).pipe(\r\n    map((action: fromActions.CreatePost) => action.payload),\r\n    switchMap(payload => {\r\n      return this.postService\r\n        .create(payload.post)\r\n        .pipe(\r\n          map((post: Post) => new fromActions.CreatePostSuccess({post: post})),\r\n          catchError((error) => of(new fromActions.CreatePostFailure({error: error})))\r\n        );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  updatePost$ = this.actions$.ofType(fromActions.UPDATE_POST).pipe(\r\n    map((action: fromActions.UpdatePost) => action.payload),\r\n    switchMap(payload => {\r\n      return this.postService\r\n        .update(payload.post)\r\n        .pipe(\r\n          map((post) => new fromActions.UpdatePostSuccess({post: post})),\r\n          catchError((error) => of(new fromActions.UpdatePostFailure({error: error})))\r\n        );\r\n    })\r\n  );\r\n\r\n  @Effect()\r\n  deletePost$ = this.actions$.ofType(fromActions.DELETE_POST).pipe(\r\n    map((action: fromActions.DeletePost) => action.payload),\r\n    switchMap(payload => {\r\n      return this.postService\r\n        .delete(payload.id)\r\n        .pipe(\r\n          map((res) => new fromActions.DeletePostSuccess(res)),\r\n          catchError((error) => of(new fromActions.DeletePostFailure({error: error})))\r\n        );\r\n    })\r\n  );\r\n\r\n}\r\n\r\n","export * from './actions';\r\nexport * from './effects';\r\nexport * from './selectors';\r\nexport * from './reducers';\r\n","import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport * as fromPosts from './post.reducer';\r\n\r\nexport const featureName = 'postState';\r\n\r\nexport interface PostState {\r\n  posts: fromPosts.State;\r\n}\r\n\r\nexport const reducers: ActionReducerMap<PostState> = {\r\n  posts: fromPosts.reducer,\r\n};\r\n\r\nexport const getFeatureState = createFeatureSelector<PostState>(featureName);\r\n\r\nexport const getPostState = createSelector(\r\n  getFeatureState,\r\n  state => state.posts\r\n);\r\n\r\n","import { EntityState, EntityAdapter, createEntityAdapter } from '@ngrx/entity';\r\n\r\nimport { Post } from '../../models';\r\nimport * as fromPosts from '../actions/post.action';\r\n\r\nexport interface State extends EntityState<Post> {\r\n  loaded: boolean;\r\n  loading: boolean;\r\n  error: any;\r\n}\r\n\r\nexport const adapter: EntityAdapter<Post> = createEntityAdapter<Post>();\r\n\r\nexport const initialState = adapter.getInitialState({\r\n  loaded: false,\r\n  loading: false,\r\n  error: null\r\n});\r\n\r\nexport function reducer(state = initialState, action: fromPosts.PostActions): State {\r\n  switch (action.type) {\r\n    case fromPosts.GET_POST_BY_ID:\r\n    case fromPosts.GET_POSTS: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      };\r\n    }\r\n\r\n    case fromPosts.GET_POSTS_SUCCESS: {\r\n      return adapter.addAll(action.payload.posts, {\r\n        ...state,\r\n        loaded: true,\r\n        loading: false,\r\n        error: null\r\n      });\r\n    }\r\n\r\n    case fromPosts.GET_POSTS_FAILURE: {\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loaded: false,\r\n        error: action.payload.error\r\n      };\r\n    }\r\n\r\n    case fromPosts.GET_POST_BY_ID_SUCCESS: {\r\n      const update = {id: action.payload.post.id, changes: action.payload.post};\r\n      return adapter.updateOne(update, {\r\n        ...state,\r\n        loading: false,\r\n        loaded: true,\r\n        error: null\r\n      });\r\n    }\r\n\r\n    case fromPosts.GET_POST_BY_ID_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        loaded: false,\r\n        error: action.payload.error\r\n      };\r\n    }\r\n\r\n    case fromPosts.CREATE_POST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    }\r\n\r\n    case fromPosts.CREATE_POST_SUCCESS: {\r\n      return adapter.addOne(action.payload.post, {\r\n        ...state,\r\n        loading: false,\r\n        error: null\r\n      });\r\n\r\n    }\r\n\r\n    case fromPosts.CREATE_POST_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error\r\n      };\r\n    }\r\n\r\n    case fromPosts.UPDATE_POST: {\r\n      const update = {id: action.payload.post.id, changes: action.payload.post};\r\n      return adapter.updateOne(update, {\r\n        ...state,\r\n        loading: true,\r\n        error: null\r\n      });\r\n    }\r\n\r\n    case fromPosts.UPDATE_POST_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: null\r\n      };\r\n    }\r\n\r\n    case fromPosts.UPDATE_POST_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error\r\n      };\r\n    }\r\n\r\n    case fromPosts.DELETE_POST: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: null,\r\n      };\r\n    }\r\n\r\n    case fromPosts.DELETE_POST_SUCCESS: {\r\n      return adapter.removeOne(action.payload.id, {\r\n        ...state,\r\n        loading: false,\r\n        error: null,\r\n      });\r\n    }\r\n\r\n    case fromPosts.DELETE_POST_FAILURE: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload.error\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n}\r\n\r\nexport const getPostLoading = (state: State) => state.loading;\r\nexport const getPostLoaded = (state: State) => state.loaded;\r\nexport const getError = (state: State) => state.error;\r\n","export * from './post.selector';\r\n","import { createSelector } from '@ngrx/store';\r\n\r\nimport * as fromRoot from '@app/core/store';\r\nimport * as fromFeature from '../reducers';\r\nimport * as fromPost from '../reducers/post.reducer';\r\n\r\nexport const {\r\n  selectIds: selectPostIds,\r\n  selectEntities: selectPostEntities,\r\n  selectAll: selectAllPosts,\r\n  selectTotal: selectTotalPosts,\r\n} = fromPost.adapter.getSelectors(fromFeature.getPostState);\r\n\r\nexport const selectPostLoading = createSelector(\r\n  fromFeature.getPostState,\r\n  fromPost.getPostLoading\r\n);\r\n\r\nexport const selectPostDetail = createSelector(\r\n  selectAllPosts,\r\n  fromRoot.selectRouterParams,\r\n  (posts, routerParams) => {\r\n\r\n    console.log(routerParams);\r\n    return posts[0];\r\n  }\r\n);\r\n\r\nexport const selectPostLoaded = createSelector(\r\n  fromFeature.getPostState,\r\n  fromPost.getPostLoaded\r\n);\r\n\r\nexport const selectPostError = createSelector(\r\n  fromFeature.getPostState,\r\n  fromPost.getError\r\n);\r\n"],"sourceRoot":""}